name: CICD Pipeline

on:
- push
env:
  DOCKER_REGISTRY_USERNAME: "endybits"
  DOCKER_REGISTRY_REPOSITORY: "trained-llm-api"
jobs:
  Getting-latest-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # 
        fetch-depth: 0
    - name: Get latest tag
      run: |
        sudo apt install -y jq
        registry_tags=$(docker run --rm --entrypoint /bin/sh alpine -c "apk add -q curl && curl -sS 'https://registry.hub.docker.com/v2/repositories/$DOCKER_REGISTRY_USERNAME/$DOCKER_REGISTRY_REPOSITORY/tags/'" | jq -r '.results[].name')
        echo "Tags: $registry_tags"
        sorted_tags=($(printf "%s\n" "${registry_tags[@]}" | sort -Vr ))
        latest_tag=${sorted_tags[0]}
        echo "LATEST TAG: $latest_tag"
    - name: Get existing tag
      run: |        
        if [[ $latest_tag == "v"* ]]; then
          # Extract the version number
          version=$(echo $latest_tag | grep -oP '^v\d+\.\d+\.\d+$')
          destructured_version=($(echo $version | awk -F'.' '{ print $1, $2, $3 }'))
          # Increment version
          if [[ ${destructured_version[2]} < 9 ]]; then
            new_version="${destructured_version[0]}.${destructured_version[1]}.$(( ${destructured_version[2]} + 1))"
          else
            if [[ ${destructured_version[1]} < 9 ]]; then
              new_version="${destructured_version[0]}.$(( ${destructured_version[1]} + 1 )).0"
            else
              ##
              v_n=$(echo ${destructured_version[0]} | tr 'v' '\n')
              new_version="v$((${v_n[0]} + 1)).0.0"
            fi
          fi
          echo "New version: $new_version"
          #echo "::set-output name=new_version::$new_version"
          echo "{new_version}={$new_version}" >> $GITHUB_OUTPUT
        else
          echo "Before IF ^[0-9].[0-9].[0-9]$"
          echo $([[ $latest_tag =~ ^[0-9].[0-9].[0-9]$ ]])
          if [[ $latest_tag =~ ^[0-9].[0-9].[0-9]$ ]]; then
            # Extract the version number
            version=$(echo $latest_tag | grep -oP '^\d+\.\d+\.\d+$')
            destructured_version=($(echo $version | awk -F'.' '{ print $1, $2, $3 }'))
            # Increment version
            if [[ ${destructured_version[2]} < 9 ]]; then
              new_version="${destructured_version[0]}.${destructured_version[1]}.$(( ${destructured_version[2]} + 1))"
            else
              if [[ ${destructured_version[1]} < 9 ]]; then
                new_version="${destructured_version[0]}.$(( ${destructured_version[1]} + 1 )).0"
              else
                new_version="$((${destructured_version[0]} + 1)).0.0"
              fi
            fi
            echo "New version: $new_version"
            #echo "::set-output name=new_version::$new_version"
            echo "{new_version}={$new_version}" >> $GITHUB_OUTPUT
          else
            echo "Not a tag. Skipping version determination."
          fi
        fi

